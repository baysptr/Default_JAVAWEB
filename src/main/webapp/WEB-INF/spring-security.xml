<?xml version="1.0" encoding="UTF-8"?>
<!--

    Copyright (C) 2011 ArtiVisi Intermedia <info@artivisi.com>

    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
    You may obtain a copy of the License at

            http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the License for the specific language governing permissions and
    limitations under the License.

-->
<beans:beans xmlns="http://www.springframework.org/schema/security"
             xmlns:beans="http://www.springframework.org/schema/beans"
             xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
             xsi:schemaLocation="http://www.springframework.org/schema/beans
           http://www.springframework.org/schema/beans/spring-beans.xsd
           http://www.springframework.org/schema/security
           http://www.springframework.org/schema/security/spring-security.xsd">
    
    
    <http pattern="/css/**" security="none"/>
    <http pattern="/js/**" security="none"/>
    
    <http entry-point-ref="restAuthenticationEntryPoint">
        <intercept-url pattern="/index.html*" access="ROLE_USER" />
        <intercept-url pattern="/api/dashboard**" access="ROLE_USER" />
        <intercept-url pattern="/index.html**" access="ROLE_USER" />
        <intercept-url pattern="/role/**" access="ROLE_USER" />
        <intercept-url pattern="/pages/404.html*" access="IS_AUTHENTICATED_ANONYMOUSLY" />
        <intercept-url pattern="/pages/**" access="ROLE_USER" />
        <intercept-url pattern="/config/**" access="ROLE_USER" />
        <intercept-url pattern="/config*" access="ROLE_USER" />
        <intercept-url pattern="/api/master/pegawai/*" access="ROLE_MASTER_PEGAWAI_ADD, ROLE_MASTER_PEGAWAI_EDIT, ROLE_MASTER_PEGAWAI_DELETE, ROLE_LAP_PER_PEGAWAI, ROLE_INPUT_IJIN_CUTI" />
        <intercept-url pattern="/homepage/**" access="ROLE_USER" />
        <intercept-url pattern="/img/**" access="ROLE_USER" />
        <intercept-url pattern="/img/**" access="ROLE_USER" />
        <intercept-url pattern="/login.html*" access="IS_AUTHENTICATED_ANONYMOUSLY"/>
        
        <intercept-url pattern="/**" access="IS_AUTHENTICATED_ANONYMOUSLY" />
        <form-login login-page="/login.html" 
                    default-target-url="/index.html" 
                    authentication-failure-url="/login.html?error=1"
                    always-use-default-target="true"/>
        <logout invalidate-session="true" logout-success-url="/login.html" 
                logout-url="/j_spring_security_logout" delete-cookies="JSESSIONID"/>
        
        <session-management>
            <concurrency-control max-sessions="1" expired-url="/login.html"/>
        </session-management>
    </http>
    
    <!--<beans:bean id="restAuthenticationEntryPoint" class="com.greatsoft.telkom.absensi.security.RestAuthenticationEntryPoint" />-->
    <beans:bean id="restAuthenticationEntryPoint" class="com.tpj.packinglist.security.AjaxAwareLoginUrlAuthenticationEntryPoint">
        <!--<beans:constructor-arg value="/login.html" />-->
        <beans:constructor-arg value="/login.html" />
    </beans:bean>
    <authentication-manager alias="authenticationManager">
        <authentication-provider>
            <user-service>
                <user name="root" password="admin" authorities="ROLE_USER" />
            </user-service>
        </authentication-provider>
        <authentication-provider user-service-ref='myUserDetailsService' >
            <!--<password-encoder ref="encoder" />-->  
        </authentication-provider>
    </authentication-manager>
    
    <beans:bean id="myUserDetailsService"
                class="org.springframework.security.core.userdetails.jdbc.JdbcDaoImpl">
        <beans:property name="dataSource" ref="dataSource"/>
        <beans:property name="enableAuthorities" value="false"/>
        <beans:property name="enableGroups" value="true"/>
        <beans:property name="usersByUsernameQuery">
            <beans:value>
                select username,password,active
                from c_security_user
                where username = ?
            </beans:value>
        </beans:property>
        <beans:property name="groupAuthoritiesByUsernameQuery">
            <beans:value>
                select '1' as id, 'USER' as group_name, 'ROLE_USER' as authority
                from c_security_user u
                inner join c_security_role r on u.id_role = r.id
                inner join c_security_role_permission rp on rp.id_role = r.id
                inner join c_security_permission p on rp.id_permission = p.id
                where username = ?
            </beans:value>
        </beans:property>
    </beans:bean>
<!--    <beans:bean id="encoder"  
                class="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder">  
        <beans:constructor-arg name="strength" value="10" />  
    </beans:bean>  -->
</beans:beans>